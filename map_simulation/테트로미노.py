# 테트로미노
# https://www.acmicpc.net/problem/14500
n, m = map(int, input().split())
board = []
minus = -10000
for i in range(n):
    li = list(map(int, input().split())) + [minus, minus, minus]
    board.append(li)
tmp=[minus] * (m+3)
board.append(tmp)
board.append(tmp)
board.append(tmp)

arr = [[0] * 4 for _ in range((4))]

blocks = [[[1, 1, 1, 1],
           [0, 0, 0, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 0, 0, 0],
           [1, 0, 0, 0],
           [1, 0, 0, 0],
           [1, 0, 0, 0]],

          [[1, 0, 0, 0],
           [1, 0, 0, 0],
           [1, 1, 0, 0],
           [0, 0, 0, 0]],

          [[0, 1, 0, 0],
           [0, 1, 0, 0],
           [1, 1, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 1, 0],
           [0, 0, 1, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 1, 0],
           [1, 0, 0, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 0, 0],
           [0, 1, 0, 0],
           [0, 1, 0, 0],
           [0, 0, 0, 0]],
          [[1, 0, 0, 0],
           [1, 1, 1, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],
          [[1, 1, 0, 0],
           [1, 0, 0, 0],
           [1, 0, 0, 0],
           [0, 0, 0, 0]],
          [[0, 0, 1, 0],
           [1, 1, 1, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 0, 0],
           [1, 1, 0, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 0, 0, 0],
           [1, 1, 0, 0],
           [0, 1, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 0, 0],
           [0, 1, 1, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[0, 1, 1, 0],
           [1, 1, 0, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[0, 1, 0, 0],
           [1, 1, 0, 0],
           [1, 0, 0, 0],
           [0, 0, 0, 0]],

          [[0, 1, 0, 0],
           [1, 1, 0, 0],
           [0, 1, 0, 0],
           [0, 0, 0, 0]],

          [[1, 0, 0, 0],
           [1, 1, 0, 0],
           [1, 0, 0, 0],
           [0, 0, 0, 0]],

          [[0, 1, 0, 0],
           [1, 1, 1, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]],

          [[1, 1, 1, 0],
           [0, 1, 0, 0],
           [0, 0, 0, 0],
           [0, 0, 0, 0]]]


def get_count(x, y, k):
    ret = 0
    for i in range(4):
        for j in range(4):
            ret += (blocks[k][i][j] * board[x + i][y + j])
            if ret<0:
                return -1
    #print(ret)
    return ret


ret = 0
for i in range(n):
    for j in range(m):
        for k in range(19):
            candi = get_count(i, j, k)
            if (ret < candi):
                ret = candi

print(ret)
